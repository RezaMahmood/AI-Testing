# Azure DevOps Pipeline using Template-based Architecture
# Main pipeline file that leverages reusable templates

trigger:
- none

pr:
- none

parameters:
- name: testFilter
  displayName: 'Test filter pattern (optional)'
  type: string
  default: ''
- name: runMultiVersion
  displayName: 'Test multiple Python versions'
  type: boolean
  default: false

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: 'AI Testing'

stages:
- stage: Test
  displayName: 'Python Testing'
  jobs:
  - job: SingleVersion
    displayName: 'Python 3.11 Tests'
    condition: eq('${{ parameters.runMultiVersion }}', false)
    steps:
    - template: ../templates/python-test-template.yml
      parameters:
        pythonVersion: '3.11'
        testFilter: '${{ parameters.testFilter }}'
        enableCoverage: true
  
  - ${{ if eq(parameters.runMultiVersion, true) }}:
    - job: MultiVersion
      displayName: 'Multi-Version Tests'
      strategy:
        matrix:
          Python310:
            pythonVersion: '3.10'
          Python311:
            pythonVersion: '3.11'
          Python312:
            pythonVersion: '3.12'
      steps:
      - template: ../templates/python-test-template.yml
        parameters:
          pythonVersion: '$(pythonVersion)'
          testFilter: '${{ parameters.testFilter }}'
          enableCoverage: false