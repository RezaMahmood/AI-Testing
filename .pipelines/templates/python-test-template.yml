# Python Test Execution Template
# Location: .pipelines/templates/python-test-template.yml
# Reusable template for Python testing across multiple pipelines

parameters:
- name: pythonVersion
  type: string
  default: '3.11'
- name: enableCoverage
  type: boolean
  default: true

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python ${{ parameters.pythonVersion }}'
  inputs:
    versionSpec: '${{ parameters.pythonVersion }}'
    addToPath: true

- task: NodeTool@0
  displayName: 'Install Node.js'
  inputs:
    versionSpec: '20.x'

- task: Cache@2
  displayName: 'Cache Python packages'
  inputs:
    key: 'python | "$(Agent.OS)" | requirements.txt'
    restoreKeys: |
      python | "$(Agent.OS)"
    path: $(Pipeline.Workspace)/.pip

- script: |
    npm install chrome-devtools-mcp@latest
  displayName: 'Install Chrome DevTools MCP'

- script: |
    python -m pip install --upgrade pip
    python -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
  displayName: 'Install Python dependencies'

- ${{ if eq(parameters.enableCoverage, true) }}:
  - script: |
      source venv/bin/activate
      pip install pytest-cov
    displayName: 'Install coverage dependencies'

- ${{ if eq(parameters.enableCoverage, true) }}:
  - script: |
      source venv/bin/activate
      pytest --tb=short --verbose --junitxml=pytest-results.xml --cov=. --cov-report=xml
    displayName: 'Run Python tests with coverage'
    env:
      AZURE_OPENAI_API_KEY: $(AZURE_OPENAI_API_KEY)
      AZURE_OPENAI_ENDPOINT: $(AZURE_OPENAI_ENDPOINT)
      AZURE_OPENAI_DEPLOYMENT_NAME: $(AZURE_OPENAI_DEPLOYMENT_NAME)
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(APPLICATIONINSIGHTS_CONNECTION_STRING)

- ${{ if ne(parameters.enableCoverage, true) }}:
  - script: |
      source venv/bin/activate
      pytest --tb=short --verbose --junitxml=pytest-results.xml
    displayName: 'Run Python tests'
    env:
      AZURE_OPENAI_API_KEY: $(AZURE_OPENAI_API_KEY)
      AZURE_OPENAI_ENDPOINT: $(AZURE_OPENAI_ENDPOINT)
      AZURE_OPENAI_DEPLOYMENT_NAME: $(AZURE_OPENAI_DEPLOYMENT_NAME)
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(APPLICATIONINSIGHTS_CONNECTION_STRING)

- task: PublishTestResults@2
  displayName: 'Publish test results'
  condition: always()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'pytest-results.xml'
    failTaskOnFailedTests: true
    testRunTitle: 'Python ${{ parameters.pythonVersion }} Tests'

- ${{ if eq(parameters.enableCoverage, true) }}:
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish coverage results'
    condition: always()
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'coverage.xml'
      failIfCoverageEmpty: false